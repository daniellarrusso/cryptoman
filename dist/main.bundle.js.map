{"version":3,"sources":["/Users/nathanadams/ng-projects/cryptoman/src/$_gendir lazy","/Users/nathanadams/ng-projects/cryptoman/src/app/app.component.css","/Users/nathanadams/ng-projects/cryptoman/src/app/app.component.html","/Users/nathanadams/ng-projects/cryptoman/src/app/app.component.ts","/Users/nathanadams/ng-projects/cryptoman/src/app/app.module.ts","/Users/nathanadams/ng-projects/cryptoman/src/app/appRoutes.ts","/Users/nathanadams/ng-projects/cryptoman/src/app/coins/coin.component.html","/Users/nathanadams/ng-projects/cryptoman/src/app/coins/coin.component.ts","/Users/nathanadams/ng-projects/cryptoman/src/app/coins/coins.component.html","/Users/nathanadams/ng-projects/cryptoman/src/app/coins/coins.component.ts","/Users/nathanadams/ng-projects/cryptoman/src/app/shared/model/coin.ts","/Users/nathanadams/ng-projects/cryptoman/src/app/shared/services/coinmarketcap.service.ts","/Users/nathanadams/ng-projects/cryptoman/src/app/shared/services/currency.service.ts","/Users/nathanadams/ng-projects/cryptoman/src/environments/environment.ts","/Users/nathanadams/ng-projects/cryptoman/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_gendir lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/nathanadams/ng-projects/cryptoman/src/$$_gendir lazy\n// module id = ../../../../../src/$$_gendir lazy recursive\n// module chunks = main","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/nathanadams/ng-projects/cryptoman/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = main","module.exports = \"<nav class=\\\"navbar navbar-default\\\">\\n  <div class=\\\"container-fluid\\\">\\n    <!-- Brand and toggle get grouped for better mobile display -->\\n    <div class=\\\"navbar-header\\\">\\n      <button type=\\\"button\\\" class=\\\"navbar-toggle collapsed\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#bs-example-navbar-collapse-1\\\" aria-expanded=\\\"false\\\">\\n        <span class=\\\"sr-only\\\">Toggle navigation</span>\\n        <span class=\\\"icon-bar\\\"></span>\\n        <span class=\\\"icon-bar\\\"></span>\\n        <span class=\\\"icon-bar\\\"></span>\\n      </button>\\n      <a class=\\\"navbar-brand\\\" href=\\\"#\\\">Crypto Manager</a>\\n    </div>\\n\\n    <!-- Collect the nav links, forms, and other content for toggling -->\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"bs-example-navbar-collapse-1\\\">\\n      <ul class=\\\"nav navbar-nav\\\">\\n        <li routerLinkActive=\\\"active\\\"><a [routerLink]=\\\"['coins']\\\">Crypto <span class=\\\"sr-only\\\">(current)</span></a></li>\\n      </ul>\\n      <form class=\\\"navbar-form navbar-right\\\">\\n        <div class=\\\"form-group\\\" *ngIf=\\\"currencies\\\">\\n          <select [(ngModel)]=\\\"selectedCurrency\\\" name=\\\"selectedCurrency\\\" (change)=\\\"currencyChange()\\\" class=\\\"form-control\\\">\\n              <option *ngFor=\\\"let currency of currencies\\\" [value]=\\\"currency\\\">{{currency}}</option>\\n          </select>\\n      </div>\\n      </form>\\n      <ul class=\\\"nav navbar-nav navbar-right\\\">\\n        <li class=\\\"dropdown\\\">\\n          <a href=\\\"#\\\" class=\\\"dropdown-toggle\\\" data-toggle=\\\"dropdown\\\" role=\\\"button\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">Log in <span class=\\\"caret\\\"></span></a>\\n          <ul class=\\\"dropdown-menu\\\">\\n            <li><a href=\\\"#\\\">Action</a></li>\\n            <li><a href=\\\"#\\\">Another action</a></li>\\n            <li><a href=\\\"#\\\">Something else here</a></li>\\n            <li role=\\\"separator\\\" class=\\\"divider\\\"></li>\\n            <li><a href=\\\"#\\\">Separated link</a></li>\\n          </ul>\\n        </li>\\n      </ul>\\n    </div><!-- /.navbar-collapse -->\\n  </div><!-- /.container-fluid -->\\n</nav>\\n\\n\\n  <router-outlet></router-outlet>\\n\\n\\n\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/nathanadams/ng-projects/cryptoman/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\nimport { CurrencyService } from './shared/services/currency.service';\nimport { OnInit } from '@angular/core/src/metadata/lifecycle_hooks';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n\n  constructor(private currencyService: CurrencyService) { }\n  title = 'Crypto Manager';\n\n  selectedCurrency: string;\n  currencies: any[];\n\n  ngOnInit() {\n    this.currencyService.getCurrencies().subscribe(res => this.currencies = res);\n  }\n\n  currencyChange() {\n    this.currencyService.setCurrency(this.selectedCurrency);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/nathanadams/ng-projects/cryptoman/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { LocationStrategy, HashLocationStrategy } from '@angular/common';\nimport { HttpModule } from '@angular/http';\nimport { Ng2AutoCompleteModule } from 'ng2-auto-complete';\n\n// router\nimport { routedComponents, AppRoutingModule } from './appRoutes';\n\n// services\nimport { CoinMarketCapService } from './shared/services/coinmarketcap.service';\nimport { CurrencyService } from './shared/services/currency.service';\n\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent, routedComponents\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpModule,\n    Ng2AutoCompleteModule\n  ],\n  providers: [CoinMarketCapService, CurrencyService, {provide: LocationStrategy, useClass: HashLocationStrategy}],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// /Users/nathanadams/ng-projects/cryptoman/src/app/app.module.ts","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { CoinsComponent } from './coins/coins.component';\nimport { CoinComponent } from './coins/coin.component';\n\nconst routes: Routes = [\n    { path: '', redirectTo: '/coins', pathMatch: 'full' },\n    { path: 'coins', component: CoinsComponent },\n    { path: 'coin/:id', component: CoinComponent }\n];\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes)],\n    exports: [RouterModule]\n})\nexport class AppRoutingModule {}\n\nexport const routedComponents = [\n    CoinsComponent,\n    CoinComponent\n];\n\n\n\n// WEBPACK FOOTER //\n// /Users/nathanadams/ng-projects/cryptoman/src/app/appRoutes.ts","module.exports = \"<div *ngIf=\\\"search\\\">\\n    {{search.name }} <span class=\\\"text-muted\\\">{{ search.symbol }}</span> \\n    <br />\\n    {{ search.price_converted | currency: currency :true:'1.2-2' }}\\n    <span [class]=\\\"arrow(search.percent_change_24h)\\\"> </span>{{ search.percent_change_24h }}\\n</div>\\n\\n<div *ngIf=\\\"coin\\\">\\n        {{coin.name }} <span class=\\\"text-muted\\\">{{ coin.symbol }}</span> \\n        <br />\\n        {{ coin.price_converted | currency: currency :true:'1.2-2' }}\\n        <span [class]=\\\"arrow(coin.percent_change_24h)\\\"> </span>{{ coin.percent_change_24h }}\\n        <button (click)=\\\"goBack()\\\" class=\\\"btn btn-default\\\">Back</button>\\n    </div>\\n\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/nathanadams/ng-projects/cryptoman/src/app/coins/coin.component.html\n// module id = ../../../../../src/app/coins/coin.component.html\n// module chunks = main","import { Component, Input, OnInit, Output, EventEmitter} from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Location } from '@angular/common';\nimport { Coin } from '../shared/model/coin';\nimport { CoinMarketCapService } from '../shared/services/coinmarketcap.service';\nimport { CurrencyService} from '../shared/services/currency.service';\nimport { prepareProfile } from 'selenium-webdriver/firefox';\n\n@Component({\n    selector: 'app-coin',\n    templateUrl: './coin.component.html'\n})\nexport class CoinComponent implements OnInit {\n    constructor(\n        private coinMarketService: CoinMarketCapService,\n        private currencyService: CurrencyService,\n        private location: Location,\n        private activatedRoute: ActivatedRoute\n    ) { }\n\n    @Input() search: Coin;\n\n    currency: string;\n    coin: Coin;\n    selectedCurrency: string;\n    loaded: boolean;\n\n    arrow(value: number) {\n        if (value > 0) {\n            return 'glyphicon glyphicon-arrow-up text-success';\n        }\n        return 'glyphicon glyphicon-arrow-down text-danger';\n    }\n    goBack(): void {\n        this.location.back();\n    }\n    ngOnInit() {\n        if (!this.search) {\n        this.currencyService.currency.subscribe(curr => {\n            this.currency = curr.toLowerCase();\n            this.activatedRoute.params.subscribe(params => {\n                this.coinMarketService.getCoin(params['id'], this.currency)\n                .subscribe(res => {\n                   const price = 'price_' + this.currency;\n                   this.coin = res[0];\n                   this.coin.price_converted = res[0][price];\n                    });\n                });\n        });\n    }\n}}\n\n\n\n// WEBPACK FOOTER //\n// /Users/nathanadams/ng-projects/cryptoman/src/app/coins/coin.component.ts","module.exports = \"   \\n    \\n      \\n        <div class=\\\"loading\\\" *ngIf=\\\"!loaded\\\">\\n        </div>\\n       \\n       <div class=\\\"panel panel-default\\\">\\n           <div class=\\\"panel-heading\\\">\\n            <div *ngIf=\\\"coins\\\">\\n                <span class=\\\"panel-title\\\"  title=\\\"Click to Search\\\"><i class=\\\" glyphicon glyphicon-search\\\"></i> Search</span>\\n                <input ng2-auto-complete \\n                [source]=\\\"coins\\\"\\n                value-property-name=\\\"id\\\"\\n                (ngModelChange)=\\\"valueChanged($event)\\\"\\n                display-property-name=\\\"name\\\" [max-num-list]=\\\"10\\\"\\n                [list-formatter]=\\\"autoCompleteFormatter\\\"\\n                placeholder=\\\"enter text\\\" class=\\\"form-control\\\">\\n                </div>\\n                </div>\\n\\n                <div *ngIf=\\\"coinSearch\\\" class=\\\"panel-body\\\">\\n                <app-coin [search]=\\\"coinSearch\\\"></app-coin>\\n                \\n           </div>\\n       </div>\\n    \\n     \\n    <div *ngIf=\\\"globalMarketCap\\\" class=\\\"row\\\">\\n        <div class=\\\"col-sm-4\\\">\\n               \\n                     <label>Total Market Cap</label>  <span class=\\\"label label-default\\\">{{ globalMarketCap  | currency: selectedCurrency :true:'1.2-2' }}</span> \\n       \\n        </div>\\n    </div>\\n\\n        <div  class=\\\"table-responsive\\\">\\n            <table class=\\\"table table-condensed table-hover\\\">\\n                <tr>\\n                    <th class=\\\"visible-xs\\\">Name</th>\\n                    <th class=\\\"hidden-xs\\\">Name </th>\\n                    <th>Price <div class=\\\"pull-right\\\">\\n                            <button class=\\\"btn btn-primary btn-sm\\\" (click)=\\\"refreshPrice()\\\">\\n                                    <span class=\\\"glyphicon glyphicon-refresh\\\"></span></button>\\n                    </div></th>\\n                    <th>Conversion</th>\\n                    <th class=\\\"hidden-xs\\\">1hr%</th>\\n                    <th class=\\\"hidden-xs\\\">24hr%</th>\\n                    <th class=\\\"hidden-xs\\\">Week%</th>\\n                    <th class=\\\"hidden-xs\\\">Market Cap</th>\\n                    <th>24h volume</th>\\n                </tr>\\n                <tr *ngFor=\\\"let coin of coins\\\">\\n\\n                    <td class=\\\"visible-xs\\\">\\n                        <span class=\\\"badge\\\">{{ coin.rank}}</span>\\n                        <a [routerLink]=\\\"['/coin',coin.id]\\\">{{ coin.symbol }}</a>\\n                    </td>\\n                    <td class=\\\"hidden-xs\\\">\\n                        <span class=\\\"badge\\\">{{ coin.rank}}</span>\\n                        <img src=\\\"https://files.coinmarketcap.com/static/widget/coins_legacy/16x16/{{ coin.id }}.png\\\">\\n                        <a [routerLink]=\\\"['/coin',coin.id]\\\">{{ coin.name }}</a>\\n                        \\n                    </td>\\n                    <td>{{ coin.price_converted | currency: selectedCurrency :true:'1.2-2'}} \\n                        <br />=>\\n                            <span *ngIf=\\\"coin.input\\\">{{ coin.input * coin.price_converted | currency: selectedCurrency:true:'1.2-2' }}</span>\\n                            <span *ngIf=\\\"!coin.input\\\">{{ '0.00' | currency: selectedCurrency :true:'1.2-2' }} </span>\\n                    </td>\\n                    <td>\\n                        <input style=\\\"max-width:150px;\\\" class=\\\"form-control\\\" [placeholder]=\\\"coin.symbol+ ' price'\\\" [(ngModel)]=\\\"coin.input\\\" />\\n                        \\n                    </td>\\n                    <td class=\\\"hidden-xs\\\"><span [class]=\\\"movement(coin.percent_change_1h)\\\"></span> {{ coin.percent_change_1h }} </td>\\n                    <td><span [class]=\\\"movement(coin.percent_change_24h)\\\"></span> {{ coin.percent_change_24h }} </td>\\n                    <td class=\\\"hidden-xs\\\"><span [class]=\\\"movement(coin.percent_change_7d)\\\"></span> {{ coin.percent_change_7d }} </td>\\n                    <td class=\\\"hidden-xs\\\">{{ coin.market_cap_converted | currency: selectedCurrency :true:'1.2-2'}} </td>\\n                    <td>{{ coin['24h_volume_usd'] | currency: selectedCurrency :true:'1.2-2' }}</td>\\n                    <!-- <td>\\n                        <img class=\\\"sparkline\\\" alt=\\\"sparkline\\\" src=\\\"https://s2.coinmarketcap.com/generated/sparklines/{{coin.id}}.png\\\">\\n                    </td> -->\\n                </tr>\\n            </table>\\n        </div>\\n    \\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/nathanadams/ng-projects/cryptoman/src/app/coins/coins.component.html\n// module id = ../../../../../src/app/coins/coins.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { CoinMarketCapService } from '../shared/services/coinmarketcap.service';\nimport { Coin } from '../shared/model/coin';\nimport { CurrencyService } from '../shared/services/currency.service';\nimport { OnChanges } from '@angular/core/src/metadata/lifecycle_hooks';\nimport { Router } from '@angular/router';\n\n\n@Component({\n    selector: 'app-coins',\n    templateUrl: './coins.component.html'\n})\nexport class CoinsComponent implements OnInit {\n    constructor(private coinMarketCapService: CoinMarketCapService,\n        private route: Router,\n        private currencyService: CurrencyService) { }\n\n    coins: Coin[];\n    selectedCurrency: string;\n    loaded: boolean;\n    coinSearch: Coin;\n    globalMarketCap: any;\n\n    getCrypto(val: string) {\n        console.log('selected' + val);\n    }\n    autoCompleteFormatter(data: any) {\n        return `${data.name}`;\n    }\n\n    refreshPrice() {\n        this.loaded = false;\n        this.ngOnInit();\n    }\n    currencyChange() {\n        this.coins = null;\n        this.globalMarketCap = null;\n        this.loaded = false;\n        this.coinSearch = null;\n        this.ngOnInit();\n    }\n    valueChanged(newVal: Coin) {\n        this.coinSearch = newVal;\n      }\n\n    ngOnInit() {\n        this.loaded = false;\n        this.currencyService.currency.subscribe((val: string) => {\n            this.selectedCurrency = val;\n        this.currencyService.loaded.subscribe(loaded => {\n            this.loaded = loaded;\n        });\n            this.coinMarketCapService.getCoins(this.selectedCurrency)\n            .subscribe(res => {\n                this.coins = res;\n                this.coins.forEach(element => {\n                    const index = res.indexOf(element);\n                    element.price_converted = res[index]['price_' + this.selectedCurrency.toLowerCase()];\n                    element.market_cap_converted = res[index]['market_cap_' + this.selectedCurrency.toLowerCase()];\n                });\n                this.coinMarketCapService.getGlobalData(this.selectedCurrency)\n                .subscribe(result =>  {\n                    this.globalMarketCap = result['total_market_cap_' + this.selectedCurrency.toLocaleLowerCase()];\n                });\n                this.loaded = true;\n            });\n        });\n    }\n\n    movement(value: number) {\n        if (value > 0) {\n            return 'glyphicon glyphicon-arrow-up text-success';\n        }\n        return 'glyphicon glyphicon-arrow-down text-danger';\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/nathanadams/ng-projects/cryptoman/src/app/coins/coins.component.ts","export class Coin {\n    id: string;\n    name: string;\n    symbol: string;\n    rank: number;\n    price_usd: number;\n    price_btc: number;\n    '24h_volume_usd': string;\n    market_cap_usd: string;\n    available_supply: string;\n    total_supply: string;\n    percent_change_1h: string;\n    percent_change_24h: string;\n    percent_change_7d: string;\n    last_updated: string;\n    price_converted: number;\n    market_cap_converted: number;\n    input: number;\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/nathanadams/ng-projects/cryptoman/src/app/shared/model/coin.ts","import { Injectable } from '@angular/core';\nimport { Http, Response } from '@angular/http';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/catch';\nimport { CurrencyPipe } from '@angular/common/src/pipes';\nimport { Coin } from '../model/coin';\n\n@Injectable()\nexport class CoinMarketCapService {\n    constructor(private http: Http) { }\n    private  url= 'https://api.coinmarketcap.com/v1/';\n\n    getGlobalData(currency: string) {\n        const urlExtension = 'global/?convert=' + currency;\n        return this.http.get(this.url + urlExtension)\n            .map(result => result.json());\n    }\n\n    getCoins(currency: string): Observable<[Coin]>  {\n        const urlExtension = 'ticker/?convert=' + currency + '&limit=100';\n        return this.http.get(this.url + urlExtension)\n            .map(result => result.json());\n    }\n\n    getCoin(id: string, currency: string): Observable<Coin> {\n        const urlExtension = 'https://cors-anywhere.herokuapp.com/https://api.coinmarketcap.com/v1/ticker/' + id + '?convert=' + currency;\n        return this.http.get(urlExtension)\n            .map(result => result.json() as Coin);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/nathanadams/ng-projects/cryptoman/src/app/shared/services/coinmarketcap.service.ts","import { Injectable } from '@angular/core';\nimport { Http, Response } from '@angular/http';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/observable/of';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Subject } from 'rxjs/Subject';\n\n@Injectable()\nexport class CurrencyService {\n    constructor(private http: Http) { }\n    currencies = ['USD', 'GBP', 'EUR'];\n    public currency: BehaviorSubject<string> = new BehaviorSubject<string>('usd');\n    public loaded: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n\n    getCurrencies() {\n        return Observable.of(this.currencies);\n    }\n\n    setCurrency(currency: string) {\n        this.currency.next(currency);\n    }\n\n    setLoaded() {\n        this.loaded.next(true);\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/nathanadams/ng-projects/cryptoman/src/app/shared/services/currency.service.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// /Users/nathanadams/ng-projects/cryptoman/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// /Users/nathanadams/ng-projects/cryptoman/src/main.ts"],"sourceRoot":"webpack:///"}